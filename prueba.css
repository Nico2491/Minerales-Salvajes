.ball {
    width: 100px;
    height: 100px;
    border-radius: 50%;
    background:red;
    } /* Crea una pelota de color rojo. El valor de margin corresponde al margin top y con la palabra "auto" centra la pelota en el centro */

#ball1 {
    left:25%;
    margin: 8cm auto;
    }

#ball2 {
    left:65%;
    transform:scale(1.5);
    position:relative;
    animation-name:pelota2;
    animation-duration:3s;
    animation-iteration-count: infinite;
    margin: 8cm auto;
    }

@keyframes pelota2{
    0% {left: 0cm}
    25% {left: 5cm}
    50% {left: 0cm}
    75% {left: -5cm}
    100% {left: 0cm}
}


.CuadradoDeBordesLisos {
    width: 6cm;
    height: 6cm;
    border-width: 0.2cm;
    border-color: red;
    border-style: solid;
    background: lawngreen;
    border-radius: 35%;
    margin: 10px auto;
    position: relative;
    }
    
.CuadradoDeBordesLisos:hover{
    animation-name:CuadradoLiso;
    animation-duration:5s;
    }
    
@keyframes CuadradoLiso { /* Permite darle movimiento a una determinada figura o imagen. En este caso, la figura se desplaza en la horizontal. Para trabajar con la vertical se utiliza "top" y "bottom"*/
    0% {background-color: black; top:0cm; opacity:100%} /* PARA APLICAR ESTE COMANDO ES NECESARIO QUE LA POSICIÓN DE LA IMAGEN O LA FIGURA SEA "POSITION: RELATIVE"!! SINO NO VA A FUNCIONAR */
    33% {background-color: black; top: 3cm; opacity: 75%}
    66% {background-color: black; top: -3cm; opacity:50%} /* "opacity" cambia la opacidad de los colores */
    100% {background-color: black; top: 0cm; opacity:30%}
    }

.rectangulo{
    width: 500px;
    height: 200px;
    margin: 3cm auto;  /*aumenta el tamaño del rectangulo */
    background:black;
    } /* Crea un rectangulo */

/* el comando "a:hover" permite cambiar las propiedades del link (ya sea tipo, color, tamaño, etc) cuando apoyamos el cursor del mouse sobre el link */
.rectangulo:hover { 
    transform:scale(1.5) skewX(24deg); /* "scale" aumenta el tamaño del rectangulo y "skewX" genera que el rectangulo se doble en la dirección "X". Ambos efectos se producen cuando apoyamos el cursor del mouse sobre el rectangulo */
    animation-name:Arcoiris; /* Establece el nombre de la animación. El nombre de la animación debe coincidir con el nombre de "Keyframes" (comando que contiene las propiedades de la imagen)*/
    animation-duration: 6s; /* Establece el tiempo que dura la animación */
    }

@keyframes Arcoiris { /* El nombre de la animación debe coincidir con el nombre de "Keyframes" (comando que contiene las propiedades de la imagen)*/
    0% {background-color:red;} 
    25%{background-color: blue;}
    50%{background-color:lightseagreen;}
    75%{background-color: lightsteelblue;}
    100%{background-color: lightgoldenrodyellow;}
  } /* Establece que la animación vaya cambiando de color a lo largo del tiempo establecido (en este caso 6 seg), partiendo del rojo y llegando al amarillo clarito*/

.fondoestrellas {
    background: linear-gradient(45deg, black, rgb(15, 11, 247), rgb(85, 229, 240), rgb(243, 224, 237), white);
    padding: -5cm 0cm -5cm 0cm;
}

.EstrellaTitilanteCircular1 {
    width:35px;
    height: 35px;
    margin: 0.5cm;
    border-radius: 50%; /* Permite que la figura adquiera forma de pelota */
    position: relative;
    background: whitesmoke;
    animation-name:EstrellaTitilante1;
    animation-duration: 1s;
    animation-iteration-count: infinite;
}

.EstrellaTitilanteCircular2 {
    width:35px;
    height: 35px;
    margin: 0.5cm auto;
    border-radius: 50%;
    position: relative;
    background: rgb(247, 33, 218);
    animation-name:EstrellaTitilante2;
    animation-duration: 2s;
    animation-iteration-count: infinite;
}

@keyframes EstrellaTitilante1{
    20% {transform: scale(0.5); opacity: 0.5}
}

@keyframes EstrellaTitilante2{
    60% {transform: scale(1.5); opacity: 0.5}
}

#ball3 {
    background: yellow;
    position: relative;
    margin-top: 2cm;
    animation-name:pelotas;
    animation-duration:2s;
    animation-iteration-count: infinite;
    animation-timing-function: linear; /* La pelota se desplaza a velocidad constante */
}

#ball4 {
    background: blue;
    position: relative;
    margin-top: 2cm;
    animation-name:pelotas;
    animation-duration:2s;
    animation-iteration-count: infinite;
    animation-timing-function: ease-out; /* La pelota arranca rápido al principio y luego sigue lento */
}


#ball5 {
    background:green ;
    position: relative;
    margin-top: 2cm;
    animation-name:pelotas;
    animation-duration:2s;
    animation-iteration-count: infinite;
    animation-timing-function: ease-in; /* La pelota arranca lento al principio y luego sigue rápido */
}

#ball6 {
    background:linear-gradient(45deg, black, blue, rgb(247, 247, 161), white);
    position: relative;
    margin-top: 3cm;
    margin-bottom: 3cm;
    animation-name:pelotas;
    animation-duration:2s;
    animation-iteration-count: infinite;
    animation-timing-function: cubic-bezier(.99,.47,0,.37); /* Para calcular como quiero que se desplace la figura, hay que obtener la trayectoria de Bezier a partir de "https://cubic-bezier.com" */
}

@keyframes pelotas {
    0% {left:0cm}
    100% {left:35cm}
}

.Cuadradosdecolores{
    display: flex; 
    flex-direction: row-reverse; 
} /* "display= flex" permite hacer que los 3 elementos flexibles se alinien horizontalmente. "flex-direction: row-reverse" hace que los cuadrados se alinien en linea recta (row) e inversos a como se encontraban inicialmente */

.CuadradoRojo{
    width: 200px;
    height: 200px;
    background: red;
}

.CuadradoAzul{
    width: 200px;
    height: 200px;
    background: blue;
}

.CuadradoVerde{
    width: 200px;
    height: 200px;
    background: green;
}

.Cuadradosdecolores2{
    display: flex; 
    flex-direction: column;
} /* "flex-direcction=column" permite alinear los elementos flexibles verticalmente */

.Cuadradosdecolores3{
    display: flex; 
    justify-content: center; /* Permite ubicar los elementos flexibles en el centro de la página*/
} 

.Cuadradosdecolores4{
    display: flex; 
    flex-direction: row-reverse; /*Invierte el orden de los elementos flexibles */
    justify-content: space-between; /* Separa entre sí los elementos flexibles del contenedor*/
} 

.Cuadradosdecolores5{
    display: flex; 
    justify-content: space-around; /* Separa entre sí los elementos flexibles del contenedor y tambien deja espacio entre el borde la página y los elementos*/
} 

.Cuadradosdecolores6{
    display: flex; 
    justify-content: flex-end; /* Lleva los elementos flexibles al margen derecho de la página */
} 

.Cuadradosdecolores7{
    display: flex; 
    justify-content: flex-start; /* Lleva los elementos flexibles al margen izquierdo de la página */
} 

